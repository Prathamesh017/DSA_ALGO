SELECTION SORT (not stable,o(n2))
STEPS
PICK UP ADJACENT VALUES, COMPARE, MOVE SMALLER TO LEFT, PICK BIGGER AS CURRENT ,KEEP COMPARING, AFTER PASS ONE SMALLEST WILL BE ON LEFT,KEEP REPEATING,

BUBBLE SORT(stable,o(n2))
STEPS
SIMPLEST ALGO, PICK 2 ,SWAP IF NEED, 2 LOOPS , CONTINUE

INSERTION SORT (stable,o(n2))
STEPS
MAINTAIN 2 REGIONS LEFT-SORTED(EMPTY IN START), RIGHT-UNSORTED, AS WE KNOW SHIFT TO RIGHT WITH EVERY ITERATION AND  IF FOUND LEFT[I]>RIGHT[I]  SWAP AND KEEP CHECKING TILL 0TH INDEX.

MERGE SORT(Recursive With divide and conquer,log(n))
STEPS
DIVIDE TILL ONE ELEMENT LEFT, AND THEN START MERGING IN NEW ARR.
DIVIDE ARR IN [LEFT,MID] AND [MID+1,RIGHT],CHECK LEFT[0]>RIGHT[0] AND INSERT SORTING IN NEW ARR AND THEN CHANGE THE ORIGINAL ONE

QUICK SORT(RECURISVE WITH DIVIDE AND CONQUER, NO EXTRA SPACE LIKE MERGE)
STEPS
FIND PARTION AND PLACE IT AT CORRECT INDEX.ASSUME PARTION AS HEIGHT ALL SMALLER ON LEFT SIDE OF PARTION AND BIGGER ON RIGHT MAKE ARRAY SORTABLE WITH THAT





