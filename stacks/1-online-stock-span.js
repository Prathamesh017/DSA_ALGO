//https://leetcode.com/problems/online-stock-span/description/
//Implement Stack D.S to solve this problem
//Design an algorithm that collects daily price  for some stock and returns the span of that stock's price for the current day. 
// For example, if the prices of the stock in the last four days is [10,6,8,7] and the price of the stock today is 9, then the span of today is 4 because starting from today, the price of the stock was less than or equal 9 for 4 consecutive days. stock prices=[10,6,8,7,9] span=[1,1,2,1,4]  


// ! The stack which will be generated by this will be monotonic stack , which means it would be in ascending order 

class Node{
  constructor(data){
    this.data=data;
    this.next=null;
  }
}
class Stack{
   constructor(){
    this.top=null;
   }
   push(data){
    const node=new Node(data);
    node.next=this.top;
    this.top=node;
   }
   pop(){
    if (!this.top) {
      return undefined; // Return undefined if the stack is empty
    }
    const removedNode = this.top;
    this.top = this.top.next;
    return removedNode.data;
   }
   isEmpty(){
    console.log(this)
    if (!this.top) {
      return undefined; // Return undefined if the stack is empty
    }
    return this.top.data;
   }
}


function onlineStockspan(arr){
  const stack=new Stack();
  const spans=[];
  for (let i = 0; i < arr.length; i++) {
    let span=1;
    while(stack.isEmpty() && stack.top.data.price<=arr[i]){
      span=span+stack.top.data.span;
      stack.pop();
    }
    stack.push({price:arr[i],span});
    spans.push(span)
  }
  return spans;
}

const spans=[100,80,60, 70, 60,75, 85];
const res=onlineStockspan(spans);
console.log(res);

